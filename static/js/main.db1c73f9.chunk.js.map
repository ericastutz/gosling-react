{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["goslingSpec","App","gosling","compiled","a","b","spec","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db1c73f9.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport * as gosling from 'gosling.js';\n\nconst goslingSpec = {\n  \"arrangement\": \"vertical\",\n  \"views\": [\n    {\n      \"layout\": \"circular\",\n      \"tracks\": [\n        {\n          \"data\": {\n            \"url\": \"https://resgen.io/api/v1/tileset_info/?d=UvVPeLHuRDiYA3qwFlm7xQ\",\n            \"type\": \"multivec\",\n            \"row\": \"sample\",\n            \"column\": \"position\",\n            \"value\": \"peak\",\n            \"categories\": [\"sample 1\", \"sample 2\", \"sample 3\", \"sample 4\"],\n            \"binSize\": 4\n          },\n          \"x\": {\"field\": \"start\", \"type\": \"genomic\"},\n          \"xe\": {\"field\": \"end\", \"type\": \"genomic\"},\n          \"y\": {\"field\": \"peak\", \"type\": \"quantitative\"},\n          \"row\": {\"field\": \"sample\", \"type\": \"nominal\"},\n          \"color\": {\"field\": \"sample\", \"type\": \"nominal\"},\n          \"stroke\": {\"value\": \"black\"},\n          \"strokeWidth\": {\"value\": 0.3},\n          \"alignment\": \"overlay\",\n          \"tracks\": [\n            {\"mark\": \"bar\"},\n            {\n              \"mark\": \"brush\",\n              \"x\": {\"linkingId\": \"detail-1\"},\n              \"color\": {\"value\": \"blue\"}\n            },\n            {\n              \"mark\": \"brush\",\n              \"x\": {\"linkingId\": \"detail-2\"},\n              \"color\": {\"value\": \"red\"}\n            }\n          ],\n          \"style\": {\"outlineWidth\": 0},\n          \"width\": 500,\n          \"height\": 100\n        },\n        {\n          \"data\": {\n            \"type\": \"csv\",\n            \"url\": \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/rearrangements.bulk.1639.simple.filtered.pub\",\n            \"headerNames\": [\n              \"chr1\",\n              \"p1s\",\n              \"p1e\",\n              \"chr2\",\n              \"p2s\",\n              \"p2e\",\n              \"type\",\n              \"id\",\n              \"f1\",\n              \"f2\",\n              \"f3\",\n              \"f4\",\n              \"f5\",\n              \"f6\"\n            ],\n            \"separator\": \"\\t\",\n            \"genomicFieldsToConvert\": [\n              {\"chromosomeField\": \"chr1\", \"genomicFields\": [\"p1s\", \"p1e\"]},\n              {\"chromosomeField\": \"chr2\", \"genomicFields\": [\"p2s\", \"p2e\"]}\n            ]\n          },\n          \"dataTransform\": {\n            \"filter\": [\n              {\"field\": \"chr1\", \"oneOf\": [\"1\", \"16\", \"14\", \"9\", \"6\", \"5\", \"3\"]},\n              {\"field\": \"chr2\", \"oneOf\": [\"1\", \"16\", \"14\", \"9\", \"6\", \"5\", \"3\"]}\n            ]\n          },\n          \"mark\": \"link\",\n          \"x\": {\"field\": \"p1s\", \"type\": \"genomic\"},\n          \"xe\": {\"field\": \"p1e\", \"type\": \"genomic\"},\n          \"x1\": {\"field\": \"p2s\", \"type\": \"genomic\"},\n          \"x1e\": {\"field\": \"p2e\", \"type\": \"genomic\"},\n          \"stroke\": {\n            \"field\": \"type\",\n            \"type\": \"nominal\",\n            \"domain\": [\n              \"deletion\",\n              \"inversion\",\n              \"translocation\",\n              \"tandem-duplication\"\n            ]\n          },\n          \"strokeWidth\": {\"value\": 0.8},\n          \"opacity\": {\"value\": 0.15},\n          \"style\": {\"circularLink\": true},\n          \"width\": 500,\n          \"height\": 100\n        }\n      ]\n    },\n    {\n      \"spacing\": 10,\n      \"arrangement\": \"horizontal\",\n      \"views\": [\n        {\n          \"tracks\": [\n            {\n              \"data\": {\n                \"url\": \"https://resgen.io/api/v1/tileset_info/?d=UvVPeLHuRDiYA3qwFlm7xQ\",\n                \"type\": \"multivec\",\n                \"row\": \"sample\",\n                \"column\": \"position\",\n                \"value\": \"peak\",\n                \"categories\": [\"sample 1\", \"sample 2\", \"sample 3\", \"sample 4\"],\n                \"binSize\": 4\n              },\n              \"mark\": \"bar\",\n              \"x\": {\n                \"field\": \"start\",\n                \"type\": \"genomic\",\n                \"linkingId\": \"detail-1\",\n                \"domain\": {\"chromosome\": \"5\"}\n              },\n              \"xe\": {\"field\": \"end\", \"type\": \"genomic\"},\n              \"y\": {\"field\": \"peak\", \"type\": \"quantitative\"},\n              \"row\": {\"field\": \"sample\", \"type\": \"nominal\"},\n              \"color\": {\"field\": \"sample\", \"type\": \"nominal\"},\n              \"stroke\": {\"value\": \"black\"},\n              \"strokeWidth\": {\"value\": 0.3},\n              \"style\": {\"background\": \"blue\", \"backgroundOpacity\": 0.1},\n              \"width\": 245,\n              \"height\": 150\n            }\n          ]\n        },\n        {\n          \"tracks\": [\n            {\n              \"data\": {\n                \"url\": \"https://resgen.io/api/v1/tileset_info/?d=UvVPeLHuRDiYA3qwFlm7xQ\",\n                \"type\": \"multivec\",\n                \"row\": \"sample\",\n                \"column\": \"position\",\n                \"value\": \"peak\",\n                \"categories\": [\"sample 1\", \"sample 2\", \"sample 3\", \"sample 4\"],\n                \"binSize\": 4\n              },\n              \"mark\": \"bar\",\n              \"x\": {\n                \"field\": \"start\",\n                \"type\": \"genomic\",\n                \"domain\": {\"chromosome\": \"16\"},\n                \"linkingId\": \"detail-2\"\n              },\n              \"xe\": {\"field\": \"end\", \"type\": \"genomic\"},\n              \"y\": {\"field\": \"peak\", \"type\": \"quantitative\"},\n              \"row\": {\"field\": \"sample\", \"type\": \"nominal\"},\n              \"color\": {\"field\": \"sample\", \"type\": \"nominal\", \"legend\": true},\n              \"stroke\": {\"value\": \"black\"},\n              \"strokeWidth\": {\"value\": 0.3},\n              \"style\": {\"background\": \"red\", \"backgroundOpacity\": 0.1},\n              \"width\": 245,\n              \"height\": 150\n            }\n          ]\n        }\n      ]\n    }\n  ]\n};\nfunction App() {\n  return (\n    \n      <gosling.GoslingComponent\n        compiled={(a, b) => {\n          // just compiled\n        }}\n        spec={goslingSpec}\n      />\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}