{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["goslingSpec","mark","binSize","layout","arrangement","centerRadius","xDomain","chromosome","style","select","color","stroke","strokeWidth","arrange","opacity","views","tracks","title","experimental","mouseEvents","size","height","id","data","range","vegaLiteSpec","width","encoding","x","field","type","bin","y","aggregate","scale","domain","name","App","gosRef","useRef","useState","setMark","setBinSize","selectedData","setSelectedData","useEffect","current","api","subscribe","debounce","e","unsubscribe","marginTop","marginLeft","min","max","step","value","className","display","margin","onChange","currentTarget","ref","spec","reactive","VegaLite","table","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a84501fd.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { debounce } from \"lodash\";\nimport { GoslingComponent } from 'gosling.js';\nimport { VegaLite } from 'react-vega'\n\nimport './App.css';\n\nconst goslingSpec = (mark, binSize) => {\n  return {\n    layout: \"linear\",\n    arrangement: \"vertical\",\n    centerRadius: 0.8,\n    xDomain: { chromosome: \"1\" },\n    style: {\n      select: { color: 'black', stroke: 'black', strokeWidth: 6, arrange: 'behind', opacity: 0.1 }\n    },\n    views: [\n      {\n        tracks: [\n          {\n            title: 'ALT + Mouse Drag For Range Selection',\n            \"id\": \"scatterplot-track\",\n            experimental: { mouseEvents: true },\n            \"data\": {\n              \"url\": \"https://server.gosling-lang.org/api/v1/tileset_info/?d=cistrome-multivec\",\n              \"type\": \"multivec\",\n              \"row\": \"sample\",\n              \"column\": \"position\",\n              \"value\": \"peak\",\n              \"categories\": [\"sample 1\", \"sample 2\", \"sample 3\", \"sample 4\"],\n              binSize: binSize === 0 ? 1 : binSize\n            },\n            \"mark\": 'point',\n            \"x\": { \"field\": \"position\", \"type\": \"genomic\" },\n            \"y\": { \"field\": \"peak\", \"type\": \"quantitative\" },\n            size: { \"field\": \"peak\", \"type\": \"quantitative\" },\n            color: { \"field\": \"sample\", \"type\": \"nominal\", \"legend\": true },\n            \"width\": 600,\n            height: 330\n          },\n          {\n            id: \"heatmap-track\",\n            data: {\n              \"url\": \"https://server.gosling-lang.org/api/v1/tileset_info/?d=cistrome-multivec\",\n              \"type\": \"multivec\",\n              \"row\": \"sample\",\n              \"column\": \"position\",\n              \"value\": \"peak\",\n              \"categories\": [\"sample 1\", \"sample 2\", \"sample 3\", \"sample 4\"],\n              binSize: binSize === 0 ? 1 : binSize\n            },\n            \"mark\": mark,\n            \"x\": { \"field\": \"start\", \"type\": \"genomic\" },\n            \"xe\": { \"field\": \"end\", \"type\": \"genomic\" },\n            \"row\": { \"field\": \"sample\", \"type\": \"nominal\", \"legend\": true },\n            \"color\": { \"field\": \"peak\", \"type\": \"quantitative\", \"legend\": true, range: 'pink' },\n            \"tooltip\": [\n              { \"field\": \"start\", \"type\": \"genomic\", \"alt\": \"Start Position\" },\n              { \"field\": \"end\", \"type\": \"genomic\", \"alt\": \"End Position\" },\n              {\n                \"field\": \"peak\",\n                \"type\": \"quantitative\",\n                \"alt\": \"Value\",\n                \"format\": \".2\"\n              },\n              { \"field\": \"sample\", \"type\": \"nominal\", \"alt\": \"Sample\" }\n            ],\n            \"width\": 600,\n            height: 130\n          }\n        ]\n      },\n    ]\n  }\n};\n\nconst vegaLiteSpec = {\n  width: 450,\n  height: 400,\n  mark: 'bar',\n  encoding: {\n    x: { field: 'peak', type: 'ordinal', bin: true },\n    y: { field: 'peak', type: 'quantitative', aggregate: 'count' },\n    color: { field: 'sample', type: 'nominal', scale: { domain: ['sample 1', 'sample 2', 'sample 3', 'sample 4'], range: ['#E79F00', '#029F73', '#0072B2', '#CB7AA7'] }}\n  },\n  data: { name: 'table' }\n};\n\nfunction App() {\n  const gosRef = useRef(null);\n\n  const [mark, setMark] = useState('rect');\n  const [binSize, setBinSize] = useState(0);\n  const [selectedData, setSelectedData] = useState([]);\n\n  useEffect(() => {\n    if (!gosRef.current) return;\n\n    gosRef.current.api.subscribe(\n      \"rangeSelect\",\n      debounce((type, e) => {\n        setSelectedData(e.data);\n      }, 0)\n    );\n\n    return () => gosRef.current.api.unsubscribe(\"rangeSelect\");\n  }, [gosRef]);\n\n  return (\n    <>\n      <span>\n        <div style={{ marginTop: 30, marginLeft: 80 }}>\n          {'Bin Size: '}\n          <input\n            type=\"range\"\n            min={0}\n            max={32}\n            step={4}\n            value={binSize}\n            className=\"slider\"\n            id=\"bin-slider\"\n            style={{ width: 100, display: 'inline', margin: 10 }}\n            onChange={(e) => setBinSize(+e.currentTarget.value)}\n          />\n          {binSize === 0 ? 1 : binSize}\n        </div>\n      </span>\n      <div style={{ marginTop: 30, marginLeft: 80 }}>\n        {'Heatmap Mark: '}\n        <select name=\"mark\" onChange={(e) => setMark(e.currentTarget.value)}>\n          <option value=\"rect\">rect</option>\n          <option value=\"point\">point</option>\n        </select>\n      </div>\n\n      <GoslingComponent\n        ref={gosRef}\n        spec={goslingSpec(mark, binSize)}\n        experimental={{ reactive: true }}\n      />\n\n      <div style={{ marginLeft: 80 }}>\n        <VegaLite spec={vegaLiteSpec} data={{ table: selectedData }} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}