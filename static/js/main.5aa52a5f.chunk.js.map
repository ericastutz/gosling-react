{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["goslingSpec","domain","mark","binSize","height","hoveredSample","alignment","opacity","value","tracks","dataTransform","type","field","oneOf","App","gosRef","useRef","useState","min","setMin","setMark","setBinSize","setHoveredSample","useEffect","current","api","subscribe","e","data","sample","unsubscribe","style","marginTop","marginLeft","max","step","className","id","width","display","margin","onChange","currentTarget","name","gosling","ref","spec","experimental","reactive","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5aa52a5f.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as gosling from 'gosling.js';\n\nconst goslingSpec = (domain, mark, binSize, height, hoveredSample) => { \n  return {\n    \"layout\": \"linear\",\n    \"arrangement\": \"vertical\",\n    \"centerRadius\": 0.8,\n    \"xDomain\": {\"chromosome\": \"1\", \"interval\": [1, 3000500]},\n    \"views\": [\n      {\n        \"tracks\": [\n          {\n            \"id\": \"track-1\",\n            \"data\": {\n              \"url\": \"https://server.gosling-lang.org/api/v1/tileset_info/?d=cistrome-multivec\",\n              \"type\": \"multivec\",\n              \"row\": \"sample\",\n              \"column\": \"position\",\n              \"value\": \"peak\",\n              \"categories\": [\"sample 1\", \"sample 2\", \"sample 3\", \"sample 4\"],\n              binSize: binSize === 0 ? 1 : binSize\n            },\n            \"mark\": mark,\n            \"x\": {\"field\": \"start\", \"type\": \"genomic\", \"axis\": \"top\"},\n            \"xe\": {\"field\": \"end\", \"type\": \"genomic\"},\n            \"row\": {\"field\": \"sample\", \"type\": \"nominal\", \"legend\": true},\n            \"color\": {\"field\": \"peak\", \"type\": \"quantitative\", \"legend\": true, domain},\n            \"tooltip\": [\n              {\"field\": \"start\", \"type\": \"genomic\", \"alt\": \"Start Position\"},\n              {\"field\": \"end\", \"type\": \"genomic\", \"alt\": \"End Position\"},\n              {\n                \"field\": \"peak\",\n                \"type\": \"quantitative\",\n                \"alt\": \"Value\",\n                \"format\": \".2\"\n              },\n              {\"field\": \"sample\", \"type\": \"nominal\", \"alt\": \"Sample\"}\n            ],\n            \"width\": 600,\n            height\n          },\n          {\n            alignment: \"overlay\",\n            \"data\": {\n              \"url\": \"https://server.gosling-lang.org/api/v1/tileset_info/?d=cistrome-multivec\",\n              \"type\": \"multivec\",\n              \"row\": \"sample\",\n              \"column\": \"position\",\n              \"value\": \"peak\",\n              \"categories\": [\"sample 1\", \"sample 2\", \"sample 3\", \"sample 4\"],\n              binSize: binSize === 0 ? 1 : binSize\n            },\n            \"mark\": 'point',\n            \"x\": {\"field\": \"position\", \"type\": \"genomic\", \"axis\": \"top\"},\n            \"y\": {\"field\": \"peak\", \"type\": \"quantitative\" },\n            opacity: { value: 0.6 },\n            // \"row\": {\"field\": \"sample\", \"type\": \"nominal\", \"legend\": true},\n            tracks: [\n              { \n                \"id\": \"track-2\",\n                \"color\": { \"value\": \"lightgray\" } \n              },\n              { \n                \"id\": \"track-3\",\n                dataTransform: [\n                  { type: 'filter', field: 'sample', oneOf: [hoveredSample] }\n                ],\n                \"color\": { \"value\": \"steelblue\" } \n              },\n            ],\n            \"width\": 600,\n            height\n          }\n        ]\n      },\n    ]\n  }\n};\n\nfunction App() {\n\n  const gosRef = useRef(null);\n\n  const [min, setMin] = useState(0);\n  const [height, setHeight] = useState(130);\n  const [mark, setMark] = useState('rect');\n  const [binSize, setBinSize] = useState(0);\n  const [hoveredSample, setHoveredSample] = useState();\n\n  useEffect(() => {\n    if (!gosRef.current) return;\n\n    gosRef.current.api.subscribe(\n      \"mouseover\",\n      (type, e) => {\n        setHoveredSample(e.data.sample);\n      }\n    );\n\n    return () => gosRef.current.api.unsubscribe(\"mouseover\");\n  }, [gosRef]);\n\n  return (\n    <>\n      <span>\n        <div style={{marginTop: 30, marginLeft: 80}}>\n          Bin Size:\n          <input \n            type=\"range\" \n            min={0}\n            max={32}\n            step={4} \n            value={binSize}\n            className=\"slider\" \n            id=\"bin-slider\" \n            style={{ width: 100, display: 'inline', margin: 10}}\n            onChange={(e) => setBinSize(+e.currentTarget.value) }\n          />\n          {binSize === 0 ? 1 : binSize}\n        </div>\n        <div style={{marginLeft: 80}}>\n          Color Min Value:\n          <input \n            type=\"range\" \n            min={0}\n            max={0.001}\n            step={0.0001} \n            value={min}\n            className=\"slider\" \n            id=\"min-slider\" \n            style={{ width: 100, display: 'inline', margin: 10}}\n            onChange={(e) => setMin(e.currentTarget.value) }\n          />\n          {min}\n        </div>\n        {/* <div style={{marginLeft: 80}}>\n          Height:\n          <input \n            type=\"range\" \n            min={130}\n            max={300}\n            step={10} \n            value={height}\n            className=\"slider\" \n            id=\"height-slider\" \n            style={{ width: 100, display: 'inline', margin: 10}}\n            onChange={(e) => setHeight(e.currentTarget.value) }\n          />\n          {height}\n        </div> */}\n      </span>\n      <div style={{marginTop: 30, marginLeft: 80}}>\n        Mark:\n        <select name=\"mark\" onChange={(e) => setMark(e.currentTarget.value)}>\n          <option value=\"rect\">rect</option>\n          <option value=\"point\">point</option>\n        </select>\n      </div>\n      <gosling.GoslingComponent\n        ref={gosRef}\n        spec={goslingSpec([+min, 0.001], mark, binSize, height, hoveredSample)}\n        experimental={{ reactive: true }}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}